// Generated by view binder compiler. Do not edit!
package bankal_deir.com.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import bankal_deir.com.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainPageBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView balance;

  @NonNull
  public final CardView balanceCard;

  @NonNull
  public final ConstraintLayout balanceContainer;

  @NonNull
  public final Button btnRecive;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final TextView firstNamett;

  @NonNull
  public final CardView headerCard;

  @NonNull
  public final TextView historyLabel;

  @NonNull
  public final ImageView imageView11;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final CoordinatorLayout main;

  @NonNull
  public final CardView payWithFatora;

  @NonNull
  public final CardView payWithQrCode;

  @NonNull
  public final ShapeableImageView profileImageMain;

  @NonNull
  public final ProgressBar progressBarBalance;

  @NonNull
  public final ProgressBar progressBarName;

  @NonNull
  public final ProgressBar progressBarProfileImage;

  @NonNull
  public final ProgressBar progressBartran;

  @NonNull
  public final CardView quickActionsCard;

  @NonNull
  public final CardView quickHistory;

  @NonNull
  public final CardView quickMore;

  @NonNull
  public final CardView quickProfile;

  @NonNull
  public final Space space;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final CardView transferQuick;

  @NonNull
  public final RecyclerView userList;

  private ActivityMainPageBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView balance,
      @NonNull CardView balanceCard, @NonNull ConstraintLayout balanceContainer,
      @NonNull Button btnRecive, @NonNull Button btnSend, @NonNull TextView firstNamett,
      @NonNull CardView headerCard, @NonNull TextView historyLabel, @NonNull ImageView imageView11,
      @NonNull LinearLayout linearLayout, @NonNull CoordinatorLayout main,
      @NonNull CardView payWithFatora, @NonNull CardView payWithQrCode,
      @NonNull ShapeableImageView profileImageMain, @NonNull ProgressBar progressBarBalance,
      @NonNull ProgressBar progressBarName, @NonNull ProgressBar progressBarProfileImage,
      @NonNull ProgressBar progressBartran, @NonNull CardView quickActionsCard,
      @NonNull CardView quickHistory, @NonNull CardView quickMore, @NonNull CardView quickProfile,
      @NonNull Space space, @NonNull TextView textView20, @NonNull CardView transferQuick,
      @NonNull RecyclerView userList) {
    this.rootView = rootView;
    this.balance = balance;
    this.balanceCard = balanceCard;
    this.balanceContainer = balanceContainer;
    this.btnRecive = btnRecive;
    this.btnSend = btnSend;
    this.firstNamett = firstNamett;
    this.headerCard = headerCard;
    this.historyLabel = historyLabel;
    this.imageView11 = imageView11;
    this.linearLayout = linearLayout;
    this.main = main;
    this.payWithFatora = payWithFatora;
    this.payWithQrCode = payWithQrCode;
    this.profileImageMain = profileImageMain;
    this.progressBarBalance = progressBarBalance;
    this.progressBarName = progressBarName;
    this.progressBarProfileImage = progressBarProfileImage;
    this.progressBartran = progressBartran;
    this.quickActionsCard = quickActionsCard;
    this.quickHistory = quickHistory;
    this.quickMore = quickMore;
    this.quickProfile = quickProfile;
    this.space = space;
    this.textView20 = textView20;
    this.transferQuick = transferQuick;
    this.userList = userList;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.balanceCard;
      CardView balanceCard = ViewBindings.findChildViewById(rootView, id);
      if (balanceCard == null) {
        break missingId;
      }

      id = R.id.balanceContainer;
      ConstraintLayout balanceContainer = ViewBindings.findChildViewById(rootView, id);
      if (balanceContainer == null) {
        break missingId;
      }

      id = R.id.btnRecive;
      Button btnRecive = ViewBindings.findChildViewById(rootView, id);
      if (btnRecive == null) {
        break missingId;
      }

      id = R.id.btnSend;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.firstNamett;
      TextView firstNamett = ViewBindings.findChildViewById(rootView, id);
      if (firstNamett == null) {
        break missingId;
      }

      id = R.id.headerCard;
      CardView headerCard = ViewBindings.findChildViewById(rootView, id);
      if (headerCard == null) {
        break missingId;
      }

      id = R.id.historyLabel;
      TextView historyLabel = ViewBindings.findChildViewById(rootView, id);
      if (historyLabel == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageView imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      CoordinatorLayout main = (CoordinatorLayout) rootView;

      id = R.id.payWithFatora;
      CardView payWithFatora = ViewBindings.findChildViewById(rootView, id);
      if (payWithFatora == null) {
        break missingId;
      }

      id = R.id.payWithQrCode;
      CardView payWithQrCode = ViewBindings.findChildViewById(rootView, id);
      if (payWithQrCode == null) {
        break missingId;
      }

      id = R.id.profileImageMain;
      ShapeableImageView profileImageMain = ViewBindings.findChildViewById(rootView, id);
      if (profileImageMain == null) {
        break missingId;
      }

      id = R.id.progressBarBalance;
      ProgressBar progressBarBalance = ViewBindings.findChildViewById(rootView, id);
      if (progressBarBalance == null) {
        break missingId;
      }

      id = R.id.progressBarName;
      ProgressBar progressBarName = ViewBindings.findChildViewById(rootView, id);
      if (progressBarName == null) {
        break missingId;
      }

      id = R.id.progressBarProfileImage;
      ProgressBar progressBarProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (progressBarProfileImage == null) {
        break missingId;
      }

      id = R.id.progressBartran;
      ProgressBar progressBartran = ViewBindings.findChildViewById(rootView, id);
      if (progressBartran == null) {
        break missingId;
      }

      id = R.id.quickActionsCard;
      CardView quickActionsCard = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsCard == null) {
        break missingId;
      }

      id = R.id.quick_history;
      CardView quickHistory = ViewBindings.findChildViewById(rootView, id);
      if (quickHistory == null) {
        break missingId;
      }

      id = R.id.quick_more;
      CardView quickMore = ViewBindings.findChildViewById(rootView, id);
      if (quickMore == null) {
        break missingId;
      }

      id = R.id.quick_profile;
      CardView quickProfile = ViewBindings.findChildViewById(rootView, id);
      if (quickProfile == null) {
        break missingId;
      }

      id = R.id.space;
      Space space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.transfer_quick;
      CardView transferQuick = ViewBindings.findChildViewById(rootView, id);
      if (transferQuick == null) {
        break missingId;
      }

      id = R.id.userList;
      RecyclerView userList = ViewBindings.findChildViewById(rootView, id);
      if (userList == null) {
        break missingId;
      }

      return new ActivityMainPageBinding((CoordinatorLayout) rootView, balance, balanceCard,
          balanceContainer, btnRecive, btnSend, firstNamett, headerCard, historyLabel, imageView11,
          linearLayout, main, payWithFatora, payWithQrCode, profileImageMain, progressBarBalance,
          progressBarName, progressBarProfileImage, progressBartran, quickActionsCard, quickHistory,
          quickMore, quickProfile, space, textView20, transferQuick, userList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
